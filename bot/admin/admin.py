from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from bot.config import settings
from bot.dao.dao import ProductDao, OrderDao
from bot.admin.kbs import admin_kb, admin_kb_back,admin_managment_kb, product_management_kb, orders_management_kb

from bot.admin.category import catalog_admin_router
from bot.admin.subcategory import subcatalog_admin_router
from bot.admin.product import product_admin_router
from bot.admin.orders import order_admin_router
from bot.admin.admin_managment import admin_router as admin_managment_router
from loguru import logger


admin_router = Router()
admin_router.include_routers(
    catalog_admin_router,
    subcatalog_admin_router,
    product_admin_router,
    order_admin_router,
    admin_managment_router
)


@admin_router.callback_query(F.data == "admin_panel", F.from_user.id.in_(settings.ADMIN_IDS))
async def start_admin(call: CallbackQuery):
    await call.answer('–î–æ—Å—Ç—É–ø –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–µ—à–µ–Ω!')
    try:
        await call.message.edit_text(
            text="–í–∞–º —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–æ—Å—Ç—É–ø –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.",
            reply_markup=admin_kb()
        )
    except Exception as e:
        await call.message.answer(
            text="–í–∞–º —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–æ—Å—Ç—É–ø –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.",
            reply_markup=admin_kb()
        )
        

# @admin_router.callback_query(F.data == 'statistic', F.from_user.id.in_(settings.ADMIN_IDS))
# async def admin_statistic(call: CallbackQuery, session_without_commit: AsyncSession):
#     await call.answer('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...')
#     await call.answer('üìä –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...')

#     # stats = await UserDAO.get_statistics(session=session_without_commit)
#     # total_summ = await PurchaseDao.get_full_summ(session=session_without_commit)
#     stats_message = (
#         "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
#         f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}\n"
#         f"üÜï –ù–æ–≤—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {stats['new_today']}\n"
#         f"üìÖ –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {stats['new_week']}\n"
#         f"üìÜ –ù–æ–≤—ã—Ö –∑–∞ –º–µ—Å—è—Ü: {stats['new_month']}\n\n"
#         f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: {total_summ} —Ä—É–±.\n\n"
#         "üïí –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç."
#     )
#     await call.message.edit_text(
#         text=stats_message,
#         reply_markup=admin_kb()
#     )

@admin_router.callback_query(F.data == "cancel", F.from_user.id.in_(settings.ADMIN_IDS))
async def admin_process_cancel(call: CallbackQuery, state: FSMContext):
    await state.clear()
    await call.answer('–û—Ç–º–µ–Ω–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞')
    await call.message.delete()
    await call.message.answer(
        text="–û—Ç–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.",
        reply_markup=admin_kb_back()
    )

@admin_router.callback_query(F.data == 'process_products', F.from_user.id.in_(settings.ADMIN_IDS))
async def admin_process_products(call: CallbackQuery, session_without_commit: AsyncSession):
    await call.answer('–†–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏')
    all_products_count = await ProductDao.count(session=session_without_commit)
    await call.message.edit_text(
        text=f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {all_products_count} —Ç–æ–≤–∞—Ä–æ–≤. –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
        reply_markup=product_management_kb()
    )

@admin_router.callback_query(F.data == 'process_orders', F.from_user.id.in_(settings.ADMIN_IDS))
async def admin_process_orders(call: CallbackQuery, session_without_commit: AsyncSession):
    await call.answer('–†–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏')
    all_orders_count = await OrderDao.count(session=session_without_commit)
    await call.message.edit_text(
        text=f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å {all_orders_count} –∑–∞–∫–∞–∑–æ–≤. –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
        reply_markup=orders_management_kb()
    )

@admin_router.callback_query(F.data == 'process_admins', F.from_user.id.in_(settings.ADMIN_IDS))
async def admin_process_orders(call: CallbackQuery,state: FSMContext, session_without_commit: AsyncSession):
    await state.clear()
    await call.answer('–†–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º')

    await call.message.edit_text(
        text=f"–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º. –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
        reply_markup=admin_managment_kb()
    )




